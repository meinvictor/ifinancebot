import telebot
from telebot import types
import os
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É
load_dotenv()
TOKEN = os.getenv("TOKEN")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –¢–∏–º—á–∞—Å–æ–≤–µ —Å—Ö–æ–≤–∏—â–µ –≤–∏—Ç—Ä–∞—Ç —É –ø–∞–º º—è—Ç—ñ
expenses = {}

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–î–æ–¥–∞—Ç–∏')
    btn2 = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    btn3 = types.KeyboardButton('–ë–∞–ª–∞–Ω—Å')
    markup.add(btn1, btn2, btn3)
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ–±–ª—ñ–∫—É –≤–∏—Ç—Ä–∞—Ç.\n–û–±–µ—Ä–∏ –¥—ñ—é –∫–Ω–æ–ø–∫–æ—é –Ω–∏–∂—á–µ –∞–±–æ –≤–≤–µ–¥–∏ –≤—Ä—É—á–Ω—É.",
        reply_markup=markup
    )

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–¥–∞—Ç–∏"
@bot.message_handler(func=lambda message: message.text == '–î–æ–¥–∞—Ç–∏')
def handle_add_button(message):
    bot.send_message(message.chat.id, "üìù –í–≤–µ–¥–∏ –≤–∏—Ç—Ä–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ: `—Å—É–º–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è`\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `150 —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç`")

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
@bot.message_handler(func=lambda message: message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
def handle_stats_button(message):
    show_stats(message)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ë–∞–ª–∞–Ω—Å"
@bot.message_handler(func=lambda message: message.text == '–ë–∞–ª–∞–Ω—Å')
def handle_balance_button(message):
    show_balance(message)

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥—É –≤–∏—Ç—Ä–∞—Ç–∏
@bot.message_handler(func=lambda message: not message.text.startswith('/'))
def handle_expense_input(message):
    try:
        amount, category = message.text.split(maxsplit=1)
        amount = float(amount)
        chat_id = message.chat.id

        if chat_id not in expenses:
            expenses[chat_id] = []

        expenses[chat_id].append({'amount': amount, 'category': category})
        bot.send_message(chat_id, f"‚úÖ –î–æ–¥–∞–Ω–æ: {amount} –≥—Ä–Ω –Ω–∞ \"{category}\"")
    except:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏: `—Å—É–º–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è`, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `100 —ó–∂–∞`")

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /add (–ø–æ–∫–∞–∑—É—î —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é)
@bot.message_handler(commands=['add'])
def handle_add_command(message):
    bot.send_message(message.chat.id, "üìù –í–≤–µ–¥–∏ –≤–∏—Ç—Ä–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ: `—Å—É–º–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è`\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `150 —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç`")

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /stats –∞–±–æ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
@bot.message_handler(commands=['stats'])
def handle_stats_command(message):
    show_stats(message)

def show_stats(message):
    chat_id = message.chat.id
    if chat_id not in expenses or not expenses[chat_id]:
        bot.send_message(chat_id, "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∏ –ø–æ—Ä–æ–∂–Ω—è.")
        return

    stats = {}
    for item in expenses[chat_id]:
        category = item['category']
        stats[category] = stats.get(category, 0) + item['amount']

    response = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏—Ç—Ä–∞—Ç:\n"
    for category, total in stats.items():
        response += f"‚Ä¢ {category}: {total:.2f} –≥—Ä–Ω\n"
    bot.send_message(chat_id, response)

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /balance –∞–±–æ –∫–Ω–æ–ø–∫–∏ "–ë–∞–ª–∞–Ω—Å"
@bot.message_handler(commands=['balance'])
def handle_balance_command(message):
    show_balance(message)

def show_balance(message):
    chat_id = message.chat.id
    if chat_id not in expenses or not expenses[chat_id]:
        bot.send_message(chat_id, "üí∞ –ë–∞–ª–∞–Ω—Å: 0 –≥—Ä–Ω")
        return

    total = sum(item['amount'] for item in expenses[chat_id])
    bot.send_message(chat_id, f"üí∞ –ó–∞–≥–∞–ª—å–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏: {total:.2f} –≥—Ä–Ω")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
